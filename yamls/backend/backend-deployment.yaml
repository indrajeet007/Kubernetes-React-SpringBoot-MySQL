# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: springboot-crud  
spec:
  selector:  # backend application pod lables should match these
    app: springboot-crud-app
    tier: backend
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
  type: NodePort   # use NodePort, if you are not running Kubernetes on cloud
---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-crud
  labels: 
    app: springboot-crud-app
    tier: backend
spec:
  replicas: 2    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: springboot-crud-app
      tier: backend
  template:
    metadata:
      labels: # Must macth 'Service' and 'Deployment' labels
        app: springboot-crud-app
        tier: backend  
    spec:                 
      containers: 
      - name: springboot-crud 
        image: indrajit0072/springboot-crud:1.2.2   # docker image of backend application
        imagePullPolicy: Always
        env:   # Setting Enviornmental Variables
        - name: SPRING_DATASOURCE_URL   # Setting Database host address from configMap
          valueFrom:
            configMapKeyRef:
              name: db-conf
              key: url
        - name: SPRING_DATASOURCE_USERNAME  # Setting Database username from Secret
          valueFrom:
            secretKeyRef:
              name: db-credentials # Secret Name
              key: username
        - name: SPRING_DATASOURCE_PASSWORD # Setting Database password from Secret
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password   
        - name: SPRING_JPA_HIBERNATE_DDL-AUTO
          value: update
        - name: COMMENT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: comment
        ports:
        - containerPort: 8080